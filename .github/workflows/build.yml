name: Build Container Image

on:
  pull_request:
  workflow_dispatch:
  push:
    branches: ["main"]
    tags: ["v*"]

jobs:
  build-and-push:
    name: build and push
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: 174919262311.dkr.ecr.us-east-1.amazonaws.com/cdk-hnb659fds-container-assets-174919262311-us-east-1
          tags: |
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=,format=short

      - name: Check if ECR tag already exists
        id: check_tag
        run: |
          registry_repo_name="174919262311.dkr.ecr.us-east-1.amazonaws.com/cdk-hnb659fds-container-assets-174919262311-us-east-1"
          repo_name="cdk-hnb659fds-container-assets-174919262311-us-east-1"
          meta_tags=$(printf '%s' "${{ steps.meta.outputs.tags }}" | tr '\n' ' ')
          tempfile=$(mktemp)
          for registry_repo_tag in $meta_tags; do
            tag=$(echo "$registry_repo_tag" | grep -Po "(?<=:).*$") # e.g. "latest", "0.1.0"
            if ! aws ecr describe-images \
              --region us-east-1 \
              --image-ids imageTag="$tag" \
              --repository-name "$repo_name" >/dev/null 2>&1; then
              echo "$registry_repo_name:$tag" >> "$tempfile"
            fi
          done
          # Output the "tags" variable for the following steps.
          {
            echo "tags<<EOF"
            cat "$tempfile"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"
          # Output the "push" variable for the following steps.
          if [ "$(cat "$tempfile")" = "" ]; then
            echo "push=false" >> "$GITHUB_OUTPUT"
          else
            echo "push=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./app
          push: ${{ steps.check_tag.outputs.push }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.check_tag.outputs.tags }}
          provenance: false
